name: Django CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt
    
    - name: Check code formatting with Black
      run: |
        black --check --diff .
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    
    - name: Set up Django environment
      run: |
        # Create a basic database for testing
        python manage.py migrate --run-syncdb
        
    - name: Run Django System Checks
      run: |
        python manage.py check
    
    - name: Run Tests with Coverage
      run: |
        coverage run --source='.' manage.py test
        coverage xml
        coverage report
    
    - name: Upload coverage reports to Coveralls
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
      continue-on-error: true

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt
    - name: Collect static files
      run: |
        python manage.py collectstatic --noinput
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Deploy to AWS Elastic Beanstalk
      run: |
        # Install EB CLI
        python -m pip install --upgrade awsebcli
        # Check if .elasticbeanstalk config exists, if not initialize
        if [ ! -d ".elasticbeanstalk" ]; then
          echo "⚠️  No EB config found. Deployment skipped."
          echo "To enable deployment, set up AWS credentials in repository secrets:"
          echo "- AWS_ACCESS_KEY_ID"
          echo "- AWS_SECRET_ACCESS_KEY"
          exit 0
        fi
        # Deploy to Elastic Beanstalk
        eb deploy --timeout 20